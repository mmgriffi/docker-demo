node {
   def commit_id ="v2.0"
   env.DOCKER_HOST = 'npipe:////./pipe/dockerDesktopLinuxEngine'  //
   stage('Preparation') {
     checkout scm
     //batchfile("git rev-parse --short HEAD > commit-id")                        
     //commit_id = readFile('.git/commit-id').trim()
     //commit_id = batchfile(git rev-parse HEAD) //windows specific command replacement for sh

   }
  //  stage('test') {
  //     def myTestContainer = docker.image('node:16')
  //    myTestContainer.pull()
  //    myTestContainer.inside {
  //      bat 'npm install --include=dev'         //windows specific command replacement for sh. The include=dev is a recent change in npm
  //      bat 'npm test'
  //    }

  stage('test2') {
    steps {
        bat '''
        docker pull node:16
        docker run --rm -v "%CD%:/app" -w /app node:16 npm install --include=dev
        docker run --rm -v "%CD%:/app" -w /app node:16 npm test
        '''
    }
  }
  
  //  stage('test with a DB') {
  //    def mysql = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes") 
  //    def myTestContainer = docker.image('node:16')
  //    myTestContainer.pull()
  //    myTestContainer.inside("--link ${mysql.id}:mysql") { // using linking, mysql will be available at host: mysql, port: 3306
  //      bat 'npm install --include=dev'         //windows specific command replacement for sh. The include=dev is a recent change in npm
  //      bat 'npm test'                   
  //    }                                   
  //    mysql.stop()
  // }
   stage('docker build/push') {
     docker.withRegistry('https://index.docker.io/v2/', 'dockerhub') {                //added dockerhub credentials in jenkins
       def app = docker.build("mmgriffi/docker-nodejs-demo:${commit_id}", '.').push()
     }
   }

}
